cmake_minimum_required (VERSION 2.6)

project (PoolAgent)

#
# cmake -DCMAKE_BUILD_TYPE=Debug -DTOOLCHAIN=/path/to/toolchain ..
# cmake -DCMAKE_BUILD_TYPE=Release -DTOOLCHAIN=/path/to/toolchain ..
#
message("CMAKE_BUILD_TYPE = ${CMAKE_BUILD_TYPE}")
IF(CMAKE_BUILD_TYPE MATCHES Debug)
  message("Debug build.")
  set(CMAKE_CXX_FLAGS "-g -O0 -Wall")
ELSEIF(CMAKE_BUILD_TYPE MATCHES Release)
  message("Release build.")
  set(CMAKE_CXX_FLAGS "-O2 -Wall")
ELSE()
  message("Some other build type.")
ENDIF()

IF(TOOLCHAIN)
  set(CROSS_PREFIX ${TOOLCHAIN}/bin/mipsel-openwrt-linux-)
ENDIF()

set(CMAKE_CXX_COMPILER ${CROSS_PREFIX}g++)
set(CMAKE_C_COMPILER   ${CROSS_PREFIX}gcc)

# use C++11
set (CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_COMPILER_ARG1 "-std=c++0x")
set(CMAKE_C_COMPILER_ARG1 "-std=c99")

include_directories(src test ${SDK_DIR}/include)
link_directories(${SDK_DIR}/lib)
set(THRID_LIBRARIES -ldl -lpthread -levent)

file(GLOB LIB_SOURCES src/*.cc src/*.c)
add_library(btccomagent STATIC ${LIB_SOURCES})

file(GLOB_RECURSE TEST_SOURCES test/*.cc)
add_executable(unittest ${TEST_SOURCES})
target_link_libraries(unittest btccomagent ${THRID_LIBRARIES})

file(GLOB_RECURSE AGENT_SOURCES src/agent/*.cc)
add_executable(btcagent ${AGENT_SOURCES})
target_link_libraries(btcagent btccomagent ${THRID_LIBRARIES})
